sum  = sum + x[i]
}
return(sum)
}
#Bài 02
Radius <- c(3:20)
volume <- function(r){
i <- 0
for (i in 1: length(r)){
volume = (4*3.14*(r[i])^3)/3
if(i == 1)
v<-c(volume)
else
v<-c(v[1:length(v)],(volume))
}
return (v)
}
Volume <- volume(Radius)
edit(data.frame(Radius,Volume))
rm(list = ls())
Radius = c<-(1,2,3)
Radius<-c(1 2 3)
Radius<-c(1:3)
theTich(Radius)
volume <- function(r){
i <- 0
for (i in 1: length(r)){
volume = (4*3.14*(r[i])^3)/3
if(i == 1)
v<-c(volume)
else
v<-c(v[1:length(v)],(volume))
}
return (v)
}
theTich <- function(Radius){
Volume <- volume(Radius)
edit(data.frame(Radius, Volume))
}
theTich(Radius)
rm(list = ls())
help.row
?row()
?round()
r < - 3:20
#BÀI 03:
r < - 3:20
cal.vol()
cal.vol < -function ( ) {
r < - 3:20
v < - round ( 4 * pi * r ^ 3 / 3,3 )
d <
return ( d )
data.frame ( Radius = r , Volume = v )
}
cal.vol < -function ( ) {
r < - 3:20
v < - round ( 4 * pi * r ^ 3 / 3,3 )
d <
return ( d )
data.frame ( Radius = r , Volume = v )
}
#BÀI 03:
cal.vol < -function ( ) {
r < - 3:20
v < - round ( 4 * pi * r ^ 3 / 3,3 )
d < return ( d )
data.frame ( Radius = r , Volume = v )
}
án
ans
cal.vol < -function ( ) {
r < - 3:20
v < - round ( 4 * pi * r ^ 3 / 3,3 )
d <- return ( d )
data.frame ( Radius = r , Volume = v )
}
cal.vol < -function ( ) {
r < - 3:20
v < - round ( 4 * pi * r ^ 3 / 3,3 )
d <- v
return ( d )
data.frame ( Radius = r , Volume = v )
}
data.frame ( Radius = r , Volume = v )
cal.vol < -function ( ) {
r < - 3:20
v < - round ( 4 * pi * r ^ 3 / 3,3 )
d <-
return ( d )
data.frame ( Radius = r , Volume = v )
}
#BÀI 03:
cal.vol < -function ( ) {
r < - 3:20
v < - round ( 4 * pi * r ^ 3 / 3,3 )
d <-
return ( d )
data.frame ( Radius = r , Volume = v )
}
#Tạo hàm chuyển đổi 2 vector Radius và Volume thành dataframe biểu diễn
theTich <- function(Radius){
Volume <- c((4*pi*Radius^3)/3)
edit(data.frame(Radius, Volume))
}
Radius<-c(3:20)
theTich(Radius)
Radius <- (1:3)
theTich(Radius)
rm(list = ls())
x <- c(edit(data.frame(n,i)))
x <- c(edit(data.frame()))
tong <- function(x,i){
sum  <- 0
j <- 0
for(j in 1:i) {
sum  = sum + x[j]
}
return(sum)
}
x
i<-3
tong(x,i)
rm(list = ls())
x <- c(edit(data.frame()))
tong <- function(x,i){
sum  <- 0
j <- 0
for(j in 1:i) {
sum  = sum + x[j][var1]
}
return(sum)
}
tong(x,2)
x
rm(list = ls())
x <- c(edit(data.frame()))
tong <- function(x,i){
sum  <- 0
j <- 0
for(j in 1:i) {
sum  = sum + x[j,var1]
}
return(sum)
}
tong(x,1)
x <- c(edit(data.frame()))
tong <- function(x,i){
sum  <- 0
j <- 0
for(j in 1:i) {
sum  = sum + x[,j]
}
return(sum)
}
x[,1]
x[1]
rm(list = ls())
#Bài Kiểm Tra Số 1 - Nhóm C
#Bài a)
trungBinh = function(x){
n = length (x)
tong = 0;
for(i in 1:n)
tong = tong + x[i];
tb = tong/n;
return (tb)
}
PhuongSai = function(x){
tb = trungBinh(x);
n = length(x)
tong2 = 0;
for(i in 1:n)
tong2 = tong2 + (x[i] - tb)^2
ps = tong2 / (n-1)
return (ps)
}
#Bài b)
x = sample(c(1:40), 40, TRUE)
x
x = sample(c(1:40), 40, TRUE)
x
#Bài Kiểm Tra Số 1 - Nhóm C
#Bài a)
trungBinh = function(x){
n = length (x)
tong = 0;
for(i in 1:n)
tong = tong + x[i];
tb = tong/n;
return (tb)
}
phuongSai = function(x){
tb = trungBinh(x);
n = length(x)
tong2 = 0;
for(i in 1:n)
tong2 = tong2 + (x[i] - tb)^2
ps = tong2 / (n-1)
return (ps)
}
#Bài b)
#sample(vector1, n, TRUE): tao 1 vector có n phần tử
#mỗi phần tử của sample nằm trong vector1
x = sample(c(1:40), 40, TRUE)
trungBinh(x)
phuongSai(x)
x
?clr()
rmv()
?rm()
rm(ls = list )
rm(ls)
rm(list)
rm(list = ls())
$$ Mot So Phan Phoi Xac Suat Thong Dung
dbinom(8,0.3,4)
dbinom(4,8,0.3)
dnorm(1.7,2,0.12)
dbinom(c(4,6),8,0.3)
dexp(2,c(1:3))
plot(0:8,dbinom(0:8,8,0.3),type = "h", ylab = "P(X=x)")
curve(dnorm(x,2,0.12), from=1.5, to = 2.5, ylab = "fX(x)")
pbinom(4,8,0.3)
pnorm(2.1,2,0.12)
pexp(2,3,lower.tail = FALSE)
plot(stepfun(0:8),c(0,pbinom(0:8,8,0.3),ylab="FX(x)", main = "")
curve(pnorm(x,2,0.12), from = 1.5, to = 2.5, ylab = "FX(x)")
plot(stepfun(0:8),c(0,pbinom(0:8,8,0.3),ylab="FX(x)", main = "")
curve(pnorm(x,2,0.12), from = 1.5, to = 2.5, ylab = "FX(x)")
#b) dnorm(x,mu,sigma)
# X~N(2,0.12^2)
dnorm(1.7,2,0.12)
#Ve ham mat do
curve(dnorm(x,2,0.12), from=1.5, to = 2.5, ylab = "fX(x)")
#Tinh FX(2.1) = P(X<=2.1)
pnorm(2.1,2,0.12)
#Ve Ham phan phoi
curve(pnorm(x,2,0.12), from = 1.5, to = 2.5, ylab = "FX(x)")
curve(pnorm(x,2,0.12), from = 1.5, to = 2.5, ylab = "FX(x)")
qbinom(0.25,8,0.3)
qnorm(0.975,2,0.12)
rpois(10,2)
rpois(10,2)
rbinom(80,1,0.02)
rbinom(80,1,0.02)
rnorm(15,2,0.12)
## Mot So Phan Phoi Xac Suat Thong Dung
## binom: Phan Phoi Nhi Thuc B
## norm: Phan Phoi chuan N
## pois: Phan Phoi Poisson P
## unif: Phan Phoi Deu U
## exp: Phan Phoi Mu E
## De nhan mat do dung lenh d(phan phoi)
## De nhan gia tri cua ham phan phoi dung p(phan phoi)
## De mo phong gia tri cua phan phoi dung r(phan phoi)
## De nhan gia tri phan vi cua phan phoi dung lenh q(phan phoi)
##1. Mat do:
## -Voi bien ngau nhien X roi rac, mat do cua X tai x la xac suat P(X=x)
## -Voi bien ngau nhien X co ham mat do fx, mat do cua X tai x la fX(x)
# Ghi chu:
# Neu phan phoi cua X phu thuoc vao mot hoac nhieu tham so, thi mat do cua X tai x duoc cho boi lenh
# d[phanphoi(x,thamso1, thamso2)]
##2. Bieu Dien Bang Do Thi
# Ve bieu dien do thi cua ham xac suat cua bien roi rac X
# dung lenh "plot" va tuy chon "type=h"
#plot([Pham vi ve], [loai phan phoi(bien x la vector)], type = "h", ylab = "[Tieu De]")
#curve([loai phan phoi], from = [diem bat dau], to = [diem ket thuc], ylab = "[tieu de]")
##3. Ham Phan Phoi: FX(x) = P(X <= x)
# *Ghi chu:
# Neu phan phoi cua X phu thuoc vao mot hoac nhieu tham so, thi ham phan phoi cua X tai x duoc cho boi lenh
# p[phanphoi(x,thamso1, thamso2)]
# Co the tinh P(X>x) = 1 - FX(x), bang lenh:
# p[phanphoi(x,tham1,tham2, lower.tail=FALSE)]
# *Ve ham phan phoi:
# -Dung lenh stepfun cho bien ngau nhien roi rac
# -Dung lenh curve cho bien ngau nhien
## 4. Phan vi
# Neu phan phoi cua X phu thuoc vao mot hoac nhieu tham so, thi phan vi muc p cua X duoc cho boi
# q[phanphoi(p,tham1,tham2)]
##VD1:
#a) dbinom(k,n,p)
#X~B(8,0.3)
dbinom(4,8,0.3)
#Ve ham mat do
plot(0:8,dbinom(0:8,8,0.3),type = "h", ylab = "P(X=x)")
#Tinh FX(4) = P(X <= 4)
pbinom(4,8,0.3)
#Ve ham phan phoi
plot(stepfun(0:8),c(0,pbinom(0:8,8,0.3),ylab="FX(x)", main = "")
#Tinh phan vi muc 0.25
qbinom(0.25,8,0.3)
plot(0:8,dbinom(0:8,8,0.3),type = "h", ylab = "P(X=x)")
dbinom(4,8,0.3)
plot(stepfun(0:8),c(0,pbinom(0:8,8,0.3),ylab="FX(x)", main = "")
qbinom(0.25,8,0.3)
plot(stepfun(0:8),c(0,pbinom(0:8,8,0.3)),ylab="FX(x)", main = "")
pbinom(4,8,0.3)
#Ve ham phan phoi
plot(stepfun(0:8),c(0,pbinom(0:8,8,0.3)),ylab="FX(x)", main = "")
plot(stepfun(0:8),c(0,pbinom(0:8,8,0.3)), ylab="FX(x)", main = "")
curve(pnorm(x,2,0.12), from = 1.5, to = 2.5, ylab = "FX(x)")
plot(stepfun(0:8),c(0,pbinom(0:8,8,0.3)), ylab="FX(x)", main = "")
plot(stepfun(0:8,c(0,pbinom(0:8,8,0.3))), ylab="FX(x)", main = "")
remove(list = ls())
#Bai01
#Tao mau 35 gia tru cua bien ngau nhien X ~ N(10;5^2)
n = 35
x = rnorm(n,10,5);x
#Tim KTC 95% cho ky vong, alpha = 5%
x.bar = mean(x)
alpha = 0.05
s = 5;
epsilon = qnorm(1-alpha/2) * s/sqrt(n)
cat('KTC', 100*(1-alpha), '% cho ky vong mu la:\n')
cat('[', x.bar - epsilon), ';', x.bar + epsilon, ']\n')
cat('[', x.bar - epsilon, ';', x.bar + epsilon, ']\n')
#Bai01:
#Doc du lieu tu file:
setwd("Data cho cac bai thuc hanh")
setwd('Data cho cac bai thuc hanh')
data = read.csv("profit.csv")
getWd()
getwd()
setwd('D:/Github/THXacSuatThongke/Data cho cac bai thuc hanh')
data = read.csv("profit.csv")
x = data$profit
#a): Ve do thi cua du lieu
hist(x)
#Nhan xet: Du lieu da cho co dang dieu xap si phan phoi chuan
#b): Uoc luong khoang tin cay cho ky vong voi alpha = 0.01 cho mau co pp chuan:
#Loc ra nhung ngay co doanh so ban hang > 65tr
hi.pro = x[x>65]
#Tinh trung binh mau, do lech chuan mau
x.bar = mean(hi.pro)
s = sd(hi.pro)
n = length(hi.pro)
alpha = 0.01
epsilon = qnorm(1-alpha/2)*s/sqrt(n)
mu.lower = x.bar - epsilon
mu.upper = x.bar + epsilon
cat("KTC ", 100*(1-alpha), "% cho ky vong mu la:\n")
cat("[",mu.lower," ; ", mu.upper, "]\n")
#c) Su dung ham t.test de kiem dinh gia thuyet cho ky vong voi muc y nghia 1%
#Dat gia thuyet:
#H0: mu <= 60
#H1: mu > 60
t.test(x,alternative = "greater", mu = 60, conf.level = 0.99)
remove(ls = list())
remove(list = ls())
xi = c(5:10);x
xi
ni = c(5,10,15,20,12,8)
x = rep(xi,ni); x
xi = c(5,6,7,8,9,10)
ni = c(5,10,15,20,12,8)
x = rep(xi,ni); x
stem(x)
#a) Bien doi du lieu ve dang vecto
xi = c(5,6,7,8,9,10)
ni = c(5,10,15,20,12,8)
x = rep(xi,ni); x
#Ve bieu do stem&leaf cho du lieu x:
stem(x)
#b: Viet ham test.leq.onside:
test.leq.oneside = function(x,mu_0,alpha){
x.bar = mean(x)
s = sd(x)
n = length(x)
t_0 = (x.bar - mu_0)*sqrt(n)/s
p.value = pt(t_0, n-1)
cat('Voi muc y nghia alpha = ',alpha, ':\n')
if (p.value <= alpha)
cat('Bac bo H0 voi p-value =', p.value)
else
cat('Chua du co so de bac bo H0 voi p-value = ', p.value)
}
#Ap dung:
test.leq.oneside(x,8,0.05)
t.test(x,alternative = 'less', mu = 8, conf.level = 0.95)
test.geq.oneside = function(x,mu_0,alpha){
x.bar = mean(x)
s = sd(x)
n = length(x)
t_0 = (x.bar - mu_0)*sqrt(n)/s
p.value = 1 - pt(t_0, n-1)
cat('Voi muc y nghia alpha = ',alpha, ':\n')
if (p.value <= alpha)
cat('Bac bo H0 voi p-value =', p.value)
else
cat('Chua du co so de bac bo H0 voi p-value = ', p.value)
}
#Ap dung:
test.leq.oneside(x,8,0.05)
#Kiem tra lai bang ham t.test:
t.test(x,alternative = 'greater', mu = 8, conf.level = 0.95)
#Ap dung:
test.geq.oneside(x,8,0.05)
#Kiem tra lai bang ham t.test:
t.test(x,alternative = 'greater', mu = 8, conf.level = 0.95)
remove(list = ls())
dat = read.csv('time.csv', header = T)
setwd('D:/Github/THXacSuatThongke/Data cho cac bai thuc hanh')
dat = read.csv('time.csv', header = T)
dat = read.csv('times.csv', header = T)
prop.test(y,n,0.5,alternative = 'two.sided', conf.level = 0.95)
n = length(KHTN);n
attach(dat); names(dat)
n = length(KHTN);n
y = length(KHTN[KHTN > 5]);y
prop.test(y,n,0.5,alternative = 'two.sided', conf.level = 0.95)
#Bai06:
#Nhap du lieu vao R:
dat = read.csv('times.csv', header = T)
attach(dat); names(dat)
#a) Su dung prop.test de kiem dinh:
n = length(KHTN);n
y = length(KHTN[KHTN > 5]);y
prop.test(y,n,0.5,alternative = 'two.sided', conf.level = 0.95)
#b): Viet ham proptest.leq
proptest.leq = function(f,n,p0,alpha){
p.hat = f/n;
z0 = (p.hat - po)*sqrt(n)/sqrt(p0*(1-p0))
p.value = pnorm(z0)
cat('Voi muc y nghia alpha = ', alpha*100, "% thi:\n")
if (p.value <= alpha)
cat('Bac bo H0 voi p-value =', p.value)
else
cat('Chua du co so de bac bo H0 voi p-value = ', p.value)
}
f = y
#Ap dung oi H1: p < 0.5
proptest.leq(f,n,0.5,0.05)
#Bai06:
#Nhap du lieu vao R:
dat = read.csv('times.csv', header = T)
attach(dat); names(dat)
#a) Su dung prop.test de kiem dinh:
n = length(KHTN);n
y = length(KHTN[KHTN > 5]);y
prop.test(y,n,0.5,alternative = 'two.sided', conf.level = 0.95)
#b): Viet ham proptest.leq
proptest.leq = function(f,n,p0,alpha){
p.hat = f/n;
z0 = (p.hat - p0)*sqrt(n)/sqrt(p0*(1-p0))
p.value = pnorm(z0)
cat('Voi muc y nghia alpha = ', alpha*100, "% thi:\n")
if (p.value <= alpha)
cat('Bac bo H0 voi p-value =', p.value)
else
cat('Chua du co so de bac bo H0 voi p-value = ', p.value)
}
f = y
#Ap dung oi H1: p < 0.5
proptest.leq(f,n,0.5,0.05)
prop.test(f,n,0.5,alternative = 'less', conf.level = 0.95)
remove(list = ls())
setwd('D:/Github/THXacSuatThongke/Data cho cac bai thuc hanh')
dat = read.csv('times.csv', header = T)
attach(dat); names(dat)
#a) Su dung prop.test de kiem dinh:
n = length(KHTN);n
y = length(KHTN[KHTN > 5]);y
prop.test(y,n,0.5,alternative = 'two.sided', conf.level = 0.95)
#b): Viet ham proptest.leq
proptest.leq = function(f,n,p0,alpha){
p.hat = f/n;
z0 = (p.hat - p0)*sqrt(n)/sqrt(p0*(1-p0))
p.value = pnorm(z0)
cat('Voi muc y nghia alpha = ', alpha*100, "% thi:\n")
if (p.value < alpha)
cat('Bac bo H0 voi p-value =', p.value)
else
cat('Chua du co so de bac bo H0 voi p-value = ', p.value)
}
f = y
#Ap dung oi H1: p < 0.5
proptest.leq(f,n,0.5,0.05)
#Kiem tra lai bang prop.test
prop.test(f,n,0.5,alternative = 'less', conf.level = 0.95)
remove(list = ls())
setwd('D:/Github/THXacSuatThongke/Data cho cac bai thuc hanh')
cholesterol = read.table('cholesterol.txt', header = T)
cholesterol
var.test(Before, After)
attach(cholesterol)
var.test(Before, After)
v.equal = ifelse(var.test(Before, After)$p.value < alpha, F, T); v.equal
alpha = 0.05
v.equal = ifelse(var.test(Before, After)$p.value < alpha, F, T); v.equal
t.test(Before, After, alternative = 'greater', var.equal = v.equal, conf.level =  0.95)
x = Before; y = After
remove(list = ls())
x = c(18,23,25,35,65,54,34,56,72,19,23,42,18,39,37)
y = c(202,186,187,180,156,169,174,172,153,199,193,174,198,183,178)
#Ve do thi
plot(x,y)
#Ve duong hoi quy
abline(lm(y~x))
#Cac gia tri co ban cua phan tich hoi quy
lm(y~x)
result = lm(y~x)
summary(result)
#a): Nhap du lieu
P = c(300,250,400,550,317,389,425,289,389,559)
NB = c(3,3,4,5,4,3,6,3,4,5)
#Ve bieu do phan tan
plot(NB,P)
#Ve duong hoi quy
abline(lm(P~NB))
#b): Hoi quy
lm(P~NB)
